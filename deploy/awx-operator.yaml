# - name: Deploy the AWX Operator # https://raw.githubusercontent.com/ansible/awx-operator/devel/deploy/awx-operator.yaml
#   community.kubernetes.k8s:
#     state: present
#     definition: "{{ lookup('url', awx_operator_manifest, split_lines=False) | from_yaml_all | list }}"
#     context: "{{ kubernetes_context }}"

- name: Create the Namespace
  community.kubernetes.k8s:
    state: present
    kind: Namespace
    api_version: v1
    name: "myproject"
    context: "minishift"

- name: Create the ClusterRole
  community.kubernetes.k8s:
    state: present
    context: "minishift"
    definition:
      kind: ClusterRole
      metadata:
        creationTimestamp: null
        name: awx-operator
        namespace: "myproject"
      rules:
        - apiGroups:
            - route.openshift.io
          resources:
            - routes
          verbs:
            - '*'
        - apiGroups:
            - ""
          resources:
            - pods
            - services
            - services/finalizers
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
          verbs:
            - '*'
        - apiGroups:
            - apps
            - extensions
          resources:
            - deployments
            - daemonsets
            - replicasets
            - statefulsets
            - ingresses
          verbs:
            - '*'
        - apiGroups:
            - monitoring.coreos.com
          resources:
            - servicemonitors
          verbs:
            - get
            - create
        - apiGroups:
            - apps
          resourceNames:
            - awx-operator
          resources:
            - deployments/finalizers
          verbs:
            - update
        - apiGroups:
            - ""
          resources:
            - pods/exec
          verbs:
            - create
            - get
        - apiGroups:
            - apps
          resources:
            - replicasets
          verbs:
            - get
        - apiGroups:
            - awx.ansible.com
          resources:
            - '*'
          verbs:
            - '*'

- name: Create the ClusterRoleBinding
  community.kubernetes.k8s:
    state: present
    context: "minishift"
    definition:
      kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: awx-operator
        namespace: "myproject"
      subjects:
        - kind: ServiceAccount
          name: awx-operator
          # namespace: default
          namespace: "myproject"
      roleRef:
        kind: ClusterRole
        name: awx-operator
        apiGroup: rbac.authorization.k8s.io

- name: Create the ServiceAccount
  community.kubernetes.k8s:
    state: present
    context: "minishift"
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: awx-operator
        namespace: "myproject"

- name: Create the Deployment
  community.kubernetes.k8s:
    state: present
    context: "minishift"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: awx-operator
        namespace: "myproject"
      spec:
        replicas: 1
        selector:
          matchLabels:
            name: awx-operator
        template:
          metadata:
            labels:
              name: awx-operator
          spec:
            serviceAccountName: awx-operator
            containers:
              - name: ansible
                command:
                  - /usr/local/bin/ao-logs
                  - /tmp/ansible-operator/runner
                  - stdout
                image: "ansible/awx-operator:0.5.0"
                imagePullPolicy: "Always"
                volumeMounts:
                  - mountPath: /tmp/ansible-operator/runner
                    name: runner
                    readOnly: true
              - name: operator
                image: "ansible/awx-operator:0.5.0"
                imagePullPolicy: "Always"
                volumeMounts:
                  - mountPath: /tmp/ansible-operator/runner
                    name: runner
                env:
                  # Watch all namespaces (cluster-scoped).
                  - name: WATCH_NAMESPACE
                    value: ""
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: OPERATOR_NAME
                    value: awx-operator
            volumes:
              - name: runner
                emptyDir: {}

- name: Create the CustomResourceDefinition
  community.kubernetes.k8s:
    state: present
    context: "minishift"
    definition:
      apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: awxs.awx.ansible.com
        namespace: "myproject"
      spec:
        group: awx.ansible.com
        names:
          kind: AWX
          listKind: AWXList
          plural: awxs
          singular: awx
        scope: Namespaced
        subresources:
          status: {}
        version: v1beta1
        versions:
          - name: v1beta1
            served: true
            storage: true
        validation:
          openAPIV3Schema:
            description: Schema validation for the AWX CRD
            type: object
            properties:
              spec:
                type: object
                properties:
                  deployment_type:
                    type: string
                    pattern: "^(tower|awx)(-)?.*$"
                  external_database:
                    type: boolean
                    description: |
                      If true you must supply a secret containing the location and credentials for
                      connecting to the external database by a user who has permission to create
                      and apply a schema.

                      The secret should have the name: <custom resource name>-postgres-configuration and
                      should look like:

                      apiVersion: v1
                      kind: Secret
                      metadata:
                        name: <crname>-postgres-configuration
                        namespace: <target namespace>
                      stringData:
                        host: <external ip or url resolvable by the cluster>
                        port: <external port, this usually defaults to 5432>
                        database: <desired database name>
                        username: <username to connect as>
                        password: <password to connect with>
                      type: Opaque
                required:
                  - deployment_type
